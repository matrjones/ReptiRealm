{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/components/effects/Background.tsx"],"sourcesContent":["export default function Background() {\r\n  return (\r\n    <div className=\"area \">\r\n      <ul className=\"circles bg-slate-900\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;;8BACZ,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/app/chat/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport ModalWrapper from \"@/components/base/ModalWrapper\";\r\nimport Background from \"@/components/effects/Background\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// Dummy API function (Replace with SignalR or real API call)\r\nconst fetchBotResponse = async (message: string) => {\r\n  return new Promise<string>((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(`You said: \"${message}\" ðŸ¤–`);\r\n    }, 1500);\r\n  });\r\n};\r\n\r\nexport default function ChatPage() {\r\n  const [messages, setMessages] = useState<\r\n    { text: string; sender: \"user\" | \"bot\" }[]\r\n  >([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  // Scroll to latest message\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    // Add user message\r\n    setMessages((prev) => [...prev, { text: input, sender: \"user\" }]);\r\n    setInput(\"\");\r\n\r\n    // Simulate bot response with a typewriter effect\r\n    const botResponse = await fetchBotResponse(input);\r\n    let displayedText = \"\";\r\n\r\n    for (let i = 0; i < botResponse.length; i++) {\r\n      await new Promise((resolve) => setTimeout(resolve, 40)); // Typewriter speed\r\n      displayedText += botResponse[i];\r\n      setMessages((prev) => [\r\n        ...prev.slice(0, -1),\r\n        { text: displayedText, sender: \"bot\" },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-screen h-screen flex flex-col bg-slate-900 text-white\">\r\n      {/* Background Effect */}\r\n      <Background />\r\n\r\n      {/* Messages */}\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n        {messages.map((msg, index) => (\r\n          <motion.div\r\n            key={index}\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n            className={`max-w-lg p-3 rounded-lg ${\r\n              msg.sender === \"user\" ? \"bg-blue-500 ml-auto\" : \"bg-gray-700\"\r\n            }`}\r\n          >\r\n            {msg.text}\r\n          </motion.div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Input Bar */}\r\n      <div className=\"p-4 border-t border-gray-700 bg-slate-800\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 p-2 bg-gray-900 text-white rounded-lg outline-none border border-gray-600 focus:border-blue-400\"\r\n            placeholder=\"Type a message...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSendMessage()}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-500 transition\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAEA;;;;;;AAHA;;;;;AAMA,6DAA6D;AAC7D,MAAM,mBAAmB,OAAO;IAC9B,OAAO,IAAI,QAAgB,CAAC;QAC1B,WAAW;YACT,QAAQ,CAAC,WAAW,EAAE,QAAQ,IAAI,CAAC;QACrC,GAAG;IACL;AACF;AAEe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAErC,EAAE;IACJ,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IAErD,2BAA2B;IAC3B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D,GAAG;QAAC;KAAS;IAEb,MAAM,oBAAoB;QACxB,IAAI,CAAC,MAAM,IAAI,IAAI;QAEnB,mBAAmB;QACnB,YAAY,CAAC,OAAS;mBAAI;gBAAM;oBAAE,MAAM;oBAAO,QAAQ;gBAAO;aAAE;QAChE,SAAS;QAET,iDAAiD;QACjD,MAAM,cAAc,MAAM,iBAAiB;QAC3C,IAAI,gBAAgB;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,IAAK;YAC3C,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS,MAAM,mBAAmB;YAC5E,iBAAiB,WAAW,CAAC,EAAE;YAC/B,YAAY,CAAC,OAAS;uBACjB,KAAK,KAAK,CAAC,GAAG,CAAC;oBAClB;wBAAE,MAAM;wBAAe,QAAQ;oBAAM;iBACtC;QACH;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,oIAAA,CAAA,UAAU;;;;;0BAGX,8OAAC;gBAAI,WAAU;;oBACZ,SAAS,GAAG,CAAC,CAAC,KAAK,sBAClB,8OAAC,OAAO,GAAG;4BAET,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAG;4BAC7B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;4BAC5B,WAAW,CAAC,wBAAwB,EAClC,IAAI,MAAM,KAAK,SAAS,wBAAwB,eAChD;sCAED,IAAI,IAAI;2BARJ;;;;;kCAWT,8OAAC;wBAAI,KAAK;;;;;;;;;;;;0BAIZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,MAAK;4BACL,WAAU;4BACV,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAW,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;;;;;;sCAEzC,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}