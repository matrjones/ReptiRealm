{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/app/chat/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport { useSearchParams } from \"next/navigation\";\r\nimport { ThumbsUp, Heart, Laugh } from \"lucide-react\";\r\nimport { EmojiType, Picker } from \"ms-3d-emoji-picker\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\ninterface Message {\r\n  guid: string;\r\n  text: string;\r\n  timestamp: string;\r\n  likes: number;\r\n  likedBy: string[];\r\n  reactions: EmojiType[];\r\n  selector: boolean;\r\n  sender: string;\r\n}\r\n\r\nexport default function ChatPage() {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef<HTMLDivElement | null>(null);\r\n  const [connection, setConnection] = useState<signalR.HubConnection | null>(\r\n    null\r\n  );\r\n\r\n  const searchParams = useSearchParams();\r\n  const username = searchParams.get(\"username\") || \"Guest\";\r\n\r\n  useEffect(() => {\r\n    const newConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl(\"https://localhost:55161/chatHub\")\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    newConnection\r\n      .start()\r\n      .then(() => console.log(\"Connected to SignalR\"))\r\n      .catch((err) => console.error(\"SignalR Connection Error:\", err));\r\n\r\n    newConnection.on(\"ReceiveMessage\", (user: string, message: Message) => {\r\n      if (user === username) return;\r\n\r\n      console.log(message.guid);\r\n\r\n      setMessages((prev) => [...prev, { ...message, sender: user }]);\r\n    });\r\n\r\n    setConnection(newConnection);\r\n\r\n    return () => {\r\n      newConnection.stop();\r\n    };\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!input.trim() || !connection) return;\r\n\r\n    const newMessage: Message = {\r\n      guid: uuidv4(),\r\n      text: input,\r\n      timestamp: new Date().toLocaleTimeString(),\r\n      likes: 0,\r\n      likedBy: [],\r\n      reactions: [],\r\n      selector: false,\r\n      sender: username,\r\n    };\r\n\r\n    setMessages((prev) => [...prev, newMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      await connection.invoke(\"SendMessage\", username, newMessage);\r\n    } catch (err) {\r\n      console.error(\"Error sending message:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-screen h-screen flex flex-col bg-slate-900 text-white\">\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={msg.guid}\r\n            className={`max-w-lg p-3 rounded-lg flex flex-col ${\r\n              msg.sender === username\r\n                ? \"bg-blue-700 ml-auto text-white\"\r\n                : \"bg-gray-700 mr-auto text-white\"\r\n            }`}\r\n          >\r\n            <div className=\"flex justify-between text-gray-400 text-sm mb-1\">\r\n              <span>{msg.sender}</span>\r\n              <span>{msg.timestamp}</span>\r\n            </div>\r\n\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n            >\r\n              {msg.text}\r\n            </motion.div>\r\n            <div className=\"flex gap-2 mt-1 text-gray-400 self-end\">\r\n              <ThumbsUp className=\"w-5 h-5 cursor-pointer hover:text-blue-400\" />\r\n              <Heart className=\"w-5 h-5 cursor-pointer hover:text-red-400\" />\r\n              <Laugh className=\"w-5 h-5 cursor-pointer hover:text-yellow-400\" />\r\n              <div className=\"fixed my-10\">\r\n                <Picker\r\n                  isOpen={true}\r\n                  handleEmojiSelect={(selectedEmoji: EmojiType) =>\r\n                    console.log(selectedEmoji)\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"p-4 border-t border-gray-700 bg-slate-800\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 p-2 bg-gray-900 text-white rounded-lg outline-none border border-gray-600 focus:border-blue-400\"\r\n            placeholder=\"Type a message...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleSendMessage()}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-500 transition\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}