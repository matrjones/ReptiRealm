{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/components/Modal.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface ModalProps {\r\n  children: React.ReactNode;\r\n  onDone: () => void;\r\n  onClose: () => void;\r\n  isOpen: boolean;\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({ children, onDone, onClose, isOpen }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"w-[400px] h-[400px] bg-white p-4\">\r\n      {children}\r\n      <button onClick={onDone}>Done</button>\r\n      <button onClick={onClose}>Close</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"names":[],"mappings":";;;;;AASA,MAAM,QAA8B,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC;QAAI,WAAU;;YACZ;0BACD,8OAAC;gBAAO,SAAS;0BAAQ;;;;;;0BACzB,8OAAC;gBAAO,SAAS;0BAAS;;;;;;;;;;;;AAGhC;uCAEe"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/app/page.tsx"],"sourcesContent":["import Modal from \"@/components/Modal\";\n\nexport default function Home() {\n  return (\n    <div className=\"w-full h-full bg-black\">\n      <main className=\"w-full h-full\">\n        <Modal\n          children={\n            <div className=\"w-full h-full bg-white text-white\">asdasd</div>\n          }\n          onDone={() => {}}\n          onClose={() => {}}\n          isOpen={true}\n        ></Modal>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC,oHAAA,CAAA,UAAK;gBACJ,wBACE,8OAAC;oBAAI,WAAU;8BAAoC;;;;;;gBAErD,QAAQ,KAAO;gBACf,SAAS,KAAO;gBAChB,QAAQ;;;;;;;;;;;;;;;;AAKlB"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAkBA,SAASE,IAAI,EAAEC,KAAK,GAAE;AAjBtB,SAASH,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAWd,8BAA8B;IAI5BO,SAASC;;;;;;;;IACTC,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,iCAAoC;QAElD,YAAA;YAAA;YAAA,CACA,kCAD4D;YAC5D,IAAO,MAAMC,cAAc,IAAIX,mBAAmB;kBAChDY,QAAAA,CAAAA,CAAY;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACVC,MAAMZ,UAAUa,QAAQ;;SACxBC,MAAM;cACNC,IAAAA;YAAAA,IAAU,CAAA;YAAA;SAAA;cACV,OAAA;YAAA,IAAA,6BAA2C;YAAA;SAAA;cAC3CC,OAAAA;YAAAA,IAAY;YAAA;SAAA;cACZC,UAAU;YAAA,IAAA;YAAA;SAAA;;OACVC,UAAU,EAAE;IACd,EAAA,QAAA;IAAA;CAAA;;;IAGA,EAAA,uBAAA;AACF,GAAE,GAAA,0BAAA","ignoreList":[0]}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}