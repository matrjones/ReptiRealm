{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/components/base/Modal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface ModalProps {\r\n  children: React.ReactNode;\r\n  onDone: () => void;\r\n  onClose: () => void;\r\n  isOpen: boolean;\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({ children, onDone, onClose, isOpen }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-opacity-50\">\r\n      <div className=\"bg-slate-800 rounded-lg shadow-lg w-[400px] p-6 relative\">\r\n        {children}\r\n\r\n        <div className=\"flex justify-end gap-2 mt-4\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 bg-gray-300 hover:bg-gray-400 rounded-md\"\r\n          >\r\n            Close\r\n          </button>\r\n          <button\r\n            onClick={onDone}\r\n            className=\"px-4 py-2 bg-yellow-600 text-white hover:bg-yellow-700 rounded-md\"\r\n          >\r\n            Done\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,QAA8B,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;IACxE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;gBACZ;8BAED,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/components/base/ModalWrapper.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport Modal from \"@/components/base/Modal\";\r\n\r\nconst ModalWrapper: React.FC = () => {\r\n  const handleDone = () => {\r\n    console.log(\"Done clicked\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    console.log(\"Close clicked\");\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={true} onDone={handleDone} onClose={handleClose}>\r\n      <div className=\"w-full h-full bg-slate-800 text-white p-4\">\r\n        <h2 className=\"text-lg font-bold\">Username</h2>\r\n        <input\r\n          className=\" rounded-lg p-2 text-lg bg-slate-700 text-white w-full mt-2\"\r\n          type=\"text\"\r\n        ></input>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalWrapper;\r\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKA,MAAM,eAAyB;IAC7B,MAAM,aAAa;QACjB,QAAQ,GAAG,CAAC;IACd;IAEA,MAAM,cAAc;QAClB,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,8OAAC,4HAAA,CAAA,UAAK;QAAC,QAAQ;QAAM,QAAQ;QAAY,SAAS;kBAChD,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoB;;;;;;8BAClC,8OAAC;oBACC,WAAU;oBACV,MAAK;;;;;;;;;;;;;;;;;AAKf;uCAEe"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/components/effects/Background.tsx"],"sourcesContent":["export default function Background() {\r\n  return (\r\n    <div className=\"area \">\r\n      <ul className=\"circles bg-slate-900\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;;8BACZ,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;8BACD,8OAAC;;;;;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/providers/ChatProvider.tsx"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useState,\r\n  FC,\r\n  ReactNode,\r\n  useContext,\r\n} from \"react\";\r\n\r\ntype ChatContextValue = {\r\n  messages: string[];\r\n  addMessage: (newMessage: string) => void;\r\n  username: string;\r\n  addUsername: (newName: string) => void;\r\n};\r\n\r\nexport const ChatContext = createContext<ChatContextValue>({\r\n  messages: [],\r\n  addMessage: () => {},\r\n  username: \"\",\r\n  addUsername: () => {},\r\n});\r\n\r\ninterface ChatProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ChatProvider: FC<ChatProviderProps> = ({ children }) => {\r\n  const [messages, setMessages] = useState<string[]>([]);\r\n  const [username, setUsername] = useState<string>(\"\");\r\n\r\n  const addMessage = (newMessage: string) => {\r\n    setMessages((prev) => [...prev, newMessage]);\r\n  };\r\n\r\n  const addUsername = (newName: string) => {\r\n    setUsername(newName);\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{ messages, addMessage, username, addUsername }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useChat = (): ChatContextValue => {\r\n  const context = useContext(ChatContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAdmin must be used within a Chat Provider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;;;AAeO,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAoB;IACzD,UAAU,EAAE;IACZ,YAAY,KAAO;IACnB,UAAU;IACV,aAAa,KAAO;AACtB;AAMO,MAAM,eAAsC,CAAC,EAAE,QAAQ,EAAE;IAC9D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,MAAM,aAAa,CAAC;QAClB,YAAY,CAAC,OAAS;mBAAI;gBAAM;aAAW;IAC7C;IAEA,MAAM,cAAc,CAAC;QACnB,YAAY;IACd;IAEA,qBACE,8OAAC,YAAY,QAAQ;QACnB,OAAO;YAAE;YAAU;YAAY;YAAU;QAAY;kBAEpD;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/app/page.tsx"],"sourcesContent":["\"use client\";\nimport ModalWrapper from \"@/components/base/ModalWrapper\";\nimport Background from \"@/components/effects/Background\";\nimport { ChatProvider } from \"@/providers/ChatProvider\";\n\nexport default function Home() {\n  return (\n    <div className=\"w-full h-full bg-slate-900\">\n      <main className=\"w-full h-full\">\n        <ChatProvider>\n          <Background />\n          <ModalWrapper />\n        </ChatProvider>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC,0HAAA,CAAA,eAAY;;kCACX,8OAAC,oIAAA,CAAA,UAAU;;;;;kCACX,8OAAC,mIAAA,CAAA,UAAY;;;;;;;;;;;;;;;;;;;;;AAKvB"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/antho/Desktop/ChatBot/source/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}